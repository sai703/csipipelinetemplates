---
parameters:
  - name: images
    type: object
    default: []
  - name: image_list_file
    type: string
    default: ""
  - name: twistlock_id
    type: string
  - name: twistlock_password
    type: string
  - name: ignore_failed_scan
    type: boolean
    default: false
  - name: acr_endpoint

steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: EBG DevOps
    pipeline: TwistcliScanTask
    buildVersionToDownload: 'latest'
    downloadType: 'specific'
    itemPattern: 'drop/TwistcliScanTask'
    downloadPath: '$(System.ArtifactsDirectory)'
- bash: chmod +x $(System.ArtifactsDirectory)/drop/TwistcliScanTask
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: ${{ parameters.acr_endpoint }}
- ${{ if ne(parameters.images, '') }}:
  - ${{ each image in parameters.images }}:
    - bash: |
        docker pull ${{ image }}
      displayName: pulling image ${{ image }}
  - ${{ each image in parameters.images }}:
    - bash: $(System.ArtifactsDirectory)/drop/TwistcliScanTask ${{ parameters.twistlock_id }} ${{ parameters.twistlock_password }} $image
      continueOnError: ${{ parameters.ignore_failed_scan }}
      displayName: scanning image ${{ image }}
- ${{ if ne(parameters.image_list_file, '') }}:
  - bash: |
      while IFS="" read -r image || [ -n "$image" ]
      do
        echo "##[group]Docker pull $image"
        echo "##[section]Start pull"
        docker pull $image
        echo "##[section]End pull"
        echo "##[endgroup]"
      done < ${{ parameters.image_list_file }}
    displayName: pulling images from text file
  - bash: |
      while IFS="" read -r image || [ -n "$image" ]
      do
        echo "##[group]Twistlock scan $image"
        echo "##[section]Start scan"
        $(System.ArtifactsDirectory)/drop/TwistcliScanTask ${{ parameters.twistlock_id }} ${{ parameters.twistlock_password }} $image
        echo "##[section]End scan"
        echo "##[endgroup]"
      done < ${{ parameters.image_list_file }}
    continueOnError: ${{ parameters.ignore_failed_scan }}
    displayName: scanning images from text file